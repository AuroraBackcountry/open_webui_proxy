events {}
http {
  server {
    listen 8080;

    # âœ… Add a DNS resolver so Nginx can resolve the private service hostname at request time
    resolver 1.1.1.1 8.8.8.8 ipv6=off valid=30s;
    resolver_timeout 5s;

    # --- PWA assets from this container ---
    location = /manifest.webmanifest { root /usr/share/nginx/html; add_header Content-Type application/manifest+json; }
    location = /sw.js               { root /usr/share/nginx/html; add_header Service-Worker-Allowed "/"; }
    location /icons/                { root /usr/share/nginx/html; }
    location = /theme.css           { root /usr/share/nginx/html; add_header Content-Type text/css; }

    # --- Proxy everything else to the private Open WebUI ---
    # UPSTREAM_URL will be env-injected (e.g., http://<internal-host>:8080)
    set $upstream ${UPSTREAM_URL};

    # Inject theme.css link into every HTML page
    sub_filter_once off;
    sub_filter '</head>' '<link rel="stylesheet" href="/theme.css"></head>';
    sub_filter_types text/html;

    location / {
      proxy_connect_timeout 5s;
      proxy_read_timeout 60s;
      proxy_send_timeout 60s;

      proxy_pass $upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto https;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }
  }
}
