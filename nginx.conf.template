events {}
http {
  # Add MIME types to prevent warnings
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Enable error logging for debugging
  error_log /var/log/nginx/error.log debug;
  access_log /var/log/nginx/access.log;

  # WebSocket upgrade support
  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  server {
    listen 8080;

    # âœ… DNS resolvers (may not be needed if using IP addresses)
    resolver 169.254.20.10 10.215.0.10 valid=30s ipv6=off;
    resolver_timeout 5s;

    # Health check endpoint
    location = /health {
      access_log off;
      return 200 "healthy\n";
      add_header Content-Type text/plain;
    }

    # Debug endpoint to check upstream URL
    location = /debug {
      return 200 "Upstream: ${UPSTREAM_URL}\n";
      add_header Content-Type text/plain;
    }

    # --- PWA assets from this container ---
    location = /manifest.webmanifest { root /usr/share/nginx/html; add_header Content-Type application/manifest+json; }
    location = /manifest.json { return 301 /manifest.webmanifest; }
    location = /sw.js               { root /usr/share/nginx/html; add_header Service-Worker-Allowed "/"; }
    location /icons/                { root /usr/share/nginx/html; }
    location = /theme.css           { root /usr/share/nginx/html; add_header Content-Type text/css; }
    location = /guideops-branding.js { root /usr/share/nginx/html; add_header Content-Type application/javascript; }
    
    # Override Open WebUI's default icons with custom Aurora icons
    location = /static/favicon.png { 
      alias /usr/share/nginx/html/icons/favicon.ico;
      add_header Content-Type image/x-icon;
    }
    location = /favicon.ico { 
      alias /usr/share/nginx/html/icons/favicon.ico;
      add_header Content-Type image/x-icon;
    }
    location = /static/logo.png { 
      alias /usr/share/nginx/html/icons/icon-192.png;
      add_header Content-Type image/png;
    }
    location = /static/splash.png { 
      alias /usr/share/nginx/html/icons/icon-512.png;
      add_header Content-Type image/png;
    }
    location = /static/splash-dark.png { 
      alias /usr/share/nginx/html/icons/icon-512.png;
      add_header Content-Type image/png;
    }

    # --- TTS proxy configuration will be conditionally inserted here ---

    # --- Proxy everything else to the private Open WebUI ---
    # UPSTREAM_URL will be env-injected (e.g., http://<internal-host>:8080)
    set $upstream ${UPSTREAM_URL};

    # Inject theme.css and GuideOps branding script into every HTML page
    sub_filter_once off;
    sub_filter '</head>' '<link rel="stylesheet" href="/theme.css"><script src="/guideops-branding.js"></script></head>';

    # --- Proxy to private Open WebUI ---
    location / {
      proxy_connect_timeout 30s;
      proxy_read_timeout    120s;
      proxy_send_timeout    120s;

      set $backend $upstream;
      proxy_pass $backend;

      # Standard proxy headers
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;

      # Tell upstream the ORIGINAL client scheme/host/port are HTTPS
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host  $host;
      proxy_set_header X-Forwarded-Port  443;
      proxy_set_header X-Forwarded-Ssl   on;

      proxy_http_version 1.1;
      proxy_set_header Connection "";

      # WebSocket
      proxy_set_header Upgrade            $http_upgrade;
      proxy_set_header Connection         $connection_upgrade;

      # Avoid http://:8080 showing up in redirects/links
      proxy_redirect     off;
      port_in_redirect   off;

      # (Optional safety net) auto-upgrade any stray http links
      add_header Content-Security-Policy "upgrade-insecure-requests" always;
    }
  }
}
